local LEVELS = {
	{ proxy = "levels#intro", name = "Intro" },
	{ proxy = "levels#level1", name = "Intro" },
	{ proxy = "levels#level2", name = "Intro" },
}

local function send_to_hud(message_id, message)
	msg.post("/hud/hud", message_id, message)
end

local function load_level(self, level_id)
	if self.current_level then
		msg.post(self.current_level.proxy, "unload")
	end
	self.current_level = LEVELS[level_id]
	msg.post(self.current_level.proxy, "async_load")
	
	send_to_hud("name", { name = self.current_level.name })
end

local function update_diamonds(diamonds)
	send_to_hud("diamonds", { diamonds = diamonds })
end

local function update_lives(lives)
	send_to_hud("lives", { lives = lives })
end

function init(self)
	msg.post("@render:", "clear_color", { color = vmath.vector4(0.114, 0.153, 0.133, 1.0) })
	msg.post("/levels", "acquire_input_focus")
	self.level = 1
	self.diamonds = 0
	self.lives = 5
	update_diamonds(self.diamonds)
	update_lives(self.lives)
	load_level(self, self.level)
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("collect_diamond") then
		self.diamonds = self.diamonds + 1
		update_diamonds(self.diamonds)
	elseif message_id == hash("proxy_loaded") then
		msg.post(sender, "enable")
	end
end

function on_input(self, action_id, action)
	print("game input", action_id)
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
